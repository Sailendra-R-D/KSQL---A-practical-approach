Concat Topics with INSERT
-------------------------
create stream of requested rides in Europe using data gen
create stream of requested rides in USA using data gen
combine into single stream of all requested rides using INSERT

ksql-datagen schema=./riderequest-europe.avro format=avro schemaRegistryUrl=http://localhost:8089 \
topic=riderequest-europe key=rideid maxInterval=5000 iterations=100

ksql-datagen schema=./riderequest-america.avro format=avro schemaRegistryUrl=http://localhost:8089 \
topic=riderequest-america key=rideid maxInterval=5000 iterations=100

At KSQL prompt
--------------

create stream rr_america_raw with (kafka_topic='riderequest-america', value_format='avro');

create stream rr_europe_raw with (kafka_topic='riderequest-europe', value_format='avro');

select * from rr_america_raw;

select * from rr_europe_raw;

create stream rr_world as select 'Europe' as data_source, * from rr_europe_raw;

insert into rr_world select 'Americas' as data_source, * from rr_america_raw;

select * from rr_world;

Windows in KSQL
---------------
how many requests are arriving each time period

select data_source, city_name, count(*)
from rr_world
window tumbling (size 60 seconds)
group by data_source, city_name;

select data_source, city_name, COLLECT_LIST(user)
from rr_world
window tumbling (size 60 seconds)
group by data_source, city_name;

select data_source, city_name, COLLECT_LIST(user)
from rr_world WINDOW SESSION (60 SECONDS)
group by data_source, city_name;

select TIMESTAMPTOSTRING(WindowStart(), 'HH:mm:ss')
, TIMESTAMPTOSTRING(WindowEnd(), 'HH:mm:ss') \
, data_source \
, TOPK(city_name, 3) \
, count(*) \
FROM rr_world \
WINDOW TUMBLING (SIZE 1 minute) \
group by data_source;
